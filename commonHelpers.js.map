{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\r\n// Додатковий імпорт стилів\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\n\r\nconst listImages = document.querySelector('.list-images');\r\n\r\nnew SimpleLightbox('.list-images a', {\r\n  close: true,\r\n});\r\n\r\nfunction imgList(photos) {\r\n  const markup = photos\r\n    .map(photo => {\r\n      return `<li class=\"photo-item\">\r\n        <a href=\"${photo.largeImageURL}\"><img class=\"img-item\" src=\"${photo.webformatURL}\" alt=\"${photo.tags}\"/></a> \r\n        <div class=\"descr-wrapper\">\r\n        <p class=\"descr\"><span>Likes</span> ${photo.likes}</p>\r\n        <p class=\"descr\"><span>Views</span> ${photo.views}</p>\r\n        <p class=\"descr\"><span>Comments</span> ${photo.comments}</p>\r\n        <p class=\"descr\"><span>Downloads</span> ${photo.downloads}</p>\r\n        </div>\r\n      </li>`;\r\n    })\r\n    .join('');\r\n\r\n  listImages.insertAdjacentHTML('beforeend', markup);\r\n}\r\n\r\nfunction clearImages() {\r\n  listImages.innerHTML = '';\r\n}\r\n\r\nexport {imgList, clearImages};\r\n","// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n// Описаний у документації\nimport {imgList, clearImages} from './render-functions';\n\n\nconst input = document.querySelector('#searchImg');\nconst btn = document.querySelector('#searchBtn');\n\n\nbtn.addEventListener('click', e => {\n  e.preventDefault();\n  clearImages();\n  fetchImages()\n    .then(photos => {\n      if (photos.hits.length === 0) {\n        iziToast.error({\n          timeout: 3000,\n          position: 'topRight',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      } else {\n        imgList(photos.hits);\n      }\n    })\n    .catch(error => console.log(error));\n});\n\nfunction fetchImages() {\n  const searchParams = new URLSearchParams({\n    key: '45320962-957458a2920d861910609dde6',\n    q: `${input.value}`,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n  return fetch(`https://pixabay.com/api/?${searchParams}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\n\n"],"names":["listImages","SimpleLightbox","imgList","photos","markup","photo","clearImages","input","btn","e","fetchImages","iziToast","error","searchParams","response"],"mappings":"6vBAIA,MAAMA,EAAa,SAAS,cAAc,cAAc,EAExD,IAAIC,EAAe,iBAAkB,CACnC,MAAO,EACT,CAAC,EAED,SAASC,EAAQC,EAAQ,CACvB,MAAMC,EAASD,EACZ,IAAIE,GACI;AAAA,mBACMA,EAAM,aAAa,gCAAgCA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,8CAE9DA,EAAM,KAAK;AAAA,8CACXA,EAAM,KAAK;AAAA,iDACRA,EAAM,QAAQ;AAAA,kDACbA,EAAM,SAAS;AAAA;AAAA,YAG5D,EACA,KAAK,EAAE,EAEVL,EAAW,mBAAmB,YAAaI,CAAM,CACnD,CAEA,SAASE,GAAc,CACrBN,EAAW,UAAY,EACzB,CCtBA,MAAMO,EAAQ,SAAS,cAAc,YAAY,EAC3CC,EAAM,SAAS,cAAc,YAAY,EAG/CA,EAAI,iBAAiB,QAASC,GAAK,CACjCA,EAAE,eAAc,EAChBH,IACAI,EAAa,EACV,KAAKP,GAAU,CACVA,EAAO,KAAK,SAAW,EACzBQ,EAAS,MAAM,CACb,QAAS,IACT,SAAU,WACV,QACE,0EACZ,CAAS,EAEDT,EAAQC,EAAO,IAAI,CAE3B,CAAK,EACA,MAAMS,GAAS,QAAQ,IAAIA,CAAK,CAAC,CACtC,CAAC,EAED,SAASF,GAAc,CACrB,MAAMG,EAAe,IAAI,gBAAgB,CACvC,IAAK,qCACL,EAAG,GAAGN,EAAM,KAAK,GACjB,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EACD,OAAO,MAAM,4BAA4BM,CAAY,EAAE,EAAE,KAAKC,GAAY,CACxE,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,CACH"}